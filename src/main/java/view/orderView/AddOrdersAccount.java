package view.orderView;

import controller.DishController;
import controller.OrderingController;
import controller.OrdersAccountController;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import model.Dish;
import model.Ordersaccount;

public final class AddOrdersAccount extends javax.swing.JInternalFrame {

    private static AddOrdersAccount addOrdersAccount;

    private final OrdersAccountController ordersAccountController;
    private final DishController dishController;
    private final OrdersAccountController dishsOrdersController;

    private final ArrayList<Dish> dishes;
    private final ArrayList<Ordersaccount> dishesorders;

    private AddOrdersAccount(OrdersAccountController ordersAccountController) {
        initComponents();
        this.ordersAccountController = ordersAccountController;
        dishController = new DishController();
        dishsOrdersController = new OrdersAccountController();

        dishes = dishController.getAll();
        dishesorders = dishsOrdersController.getAll();

        setEditors();
    }

    public static AddOrdersAccount getAddOrdersAccount(OrdersAccountController ordersAccountController) {
        if (addOrdersAccount != null) {
            addOrdersAccount.dispose();
        } else {
            addOrdersAccount = new AddOrdersAccount(ordersAccountController);
        }

        return addOrdersAccount;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        addOrderAccountButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        amountField = new javax.swing.JTextField();
        dishIDcombobox = new javax.swing.JComboBox<>();
        orderIDcombobox = new javax.swing.JComboBox<>();

        setTitle("Adding the dish to the order");

        jLabel2.setText("Order ID");

        addOrderAccountButton.setText("Add dish");
        addOrderAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOrderAccountButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Dish name");

        jLabel4.setText("Amount");

        amountField.setText("1");
        amountField.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addOrderAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(amountField)
                            .addComponent(dishIDcombobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(orderIDcombobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(orderIDcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dishIDcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addOrderAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void setEditors() {

        for (Dish m : dishes) {
            dishIDcombobox.addItem(m.getDishName());
        }

        for (Ordersaccount m : dishesorders) {
            orderIDcombobox.addItem((m.getOrderID()).toString());
        }

    }
    private void addOrderAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOrderAccountButtonActionPerformed
        java.awt.EventQueue.invokeLater(() -> {
            try {
                int orderID = Integer.valueOf(orderIDcombobox.getSelectedItem().toString());
                int dishID = dishController.getDishIDByName(dishIDcombobox.getSelectedItem().toString());
                int amount = Integer.valueOf(amountField.getText());
                if (amount < 0) {
                    JOptionPane.showMessageDialog(null, "amount must be more than 0", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (ordersAccountController.addOrdersaccount(orderID, dishID, amount) == false) {
                    JOptionPane.showMessageDialog(null, "Error while adding a data", "Error", JOptionPane.ERROR_MESSAGE);
                }

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Invalid format", "Error", JOptionPane.ERROR_MESSAGE);
                return;

            }

            addOrdersAccount.dispose();
        });
    }//GEN-LAST:event_addOrderAccountButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addOrderAccountButton;
    private javax.swing.JTextField amountField;
    private javax.swing.JComboBox<String> dishIDcombobox;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox<String> orderIDcombobox;
    // End of variables declaration//GEN-END:variables
}
